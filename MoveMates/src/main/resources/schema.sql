CREATE TABLE IF NOT EXISTS roles (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
	id VARCHAR(50) NOT NULL PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	image_name VARCHAR(255),
	email VARCHAR(255) NOT NULL UNIQUE,
	birthday DATE,
	gender VARCHAR(50),
	password VARCHAR(255) NOT NULL,
	role_id INT NOT NULL,
	enabled BOOLEAN NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (role_id) REFERENCES roles (id)
);

CREATE TABLE IF NOT EXISTS verification_tokens (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id VARCHAR(50) NOT NULL UNIQUE,
	tokens VARCHAR(255) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (user_id) REFERENCES users (id)
);
	
CREATE TABLE IF NOT EXISTS exercises (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	image_name VARCHAR(255) NOT NULL,
	explanation VARCHAR(255) NOT NULL,
	set_number VARCHAR(50) NOT NULL,
	time_required INT NOT NULL,
	type VARCHAR(50) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS bodyparts (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS exercise_bodyparts (
	exercise_id INT NOT NULL,
	bodypart_id INT NOT NULL,
	PRIMARY KEY (exercise_id, bodypart_id),
	FOREIGN KEY (exercise_id) REFERENCES exercises (id),
	FOREIGN KEY (bodypart_id) REFERENCES bodyparts (id)
);

CREATE TABLE IF NOT EXISTS purposes (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS exercise_purposes (
	exercise_id INT NOT NULL,
	purpose_id INT NOT NULL,
	PRIMARY KEY (exercise_id, purpose_id),
	FOREIGN KEY (exercise_id) REFERENCES exercises (id),
	FOREIGN KEY (purpose_id) REFERENCES purposes (id)
);

CREATE TABLE IF NOT EXISTS favorites (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id VARCHAR(50) NOT NULL,
	exercise_id INT NOT NULL,
	status INT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (exercise_id) REFERENCES exercises (id)
); 

CREATE TABLE IF NOT EXISTS mymenus (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	user_id VARCHAR(50) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS mymenu_exercises (
	mymenu_id INT NOT NULL,
	exercise_id INT NOT NULL,
	PRIMARY KEY (mymenu_id, exercise_id),
	FOREIGN KEY (mymenu_id) REFERENCES mymenus (id),
	FOREIGN KEY (exercise_id) REFERENCES exercises (id)
);

CREATE TABLE IF NOT EXISTS exercise_logs (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	user_id VARCHAR(50) NOT NULL,
	mymenu_id INT NOT NULL,
	exercise_day DATE NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (user_id) REFERENCES users (id),
	FOREIGN KEY (mymenu_id) REFERENCES mymenus (id)
);